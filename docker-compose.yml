services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.4/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - mailpit
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail

    loki:
        image: grafana/loki:2.9.0 # Use a stable Loki version
        ports:
            - "3100:3100"
        command: -config.file=/etc/loki/local-config.yaml
        volumes:
            - ./loki-config.yaml:/etc/loki/local-config.yaml
        networks:
            - sail
    promtail:
        image: grafana/promtail:2.9.0 # Use a stable Promtail version
        volumes:
            - ./promtail-config.yaml:/etc/promtail/config.yaml
            # Mount the Laravel log directory
            - ./storage/logs:/var/log/laravel
        command: -config.file=/etc/promtail/config.yaml
        networks:
            - sail
        depends_on:
            - loki
    prometheus:
        image: prom/prometheus:v2.45.0 # Use a stable Prometheus version
        command: --config.file=/etc/prometheus/prometheus.yaml
        ports:
            - "9090:9090"
        volumes:
            - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
        networks:
            - sail
    grafana:
        image: grafana/grafana:10.4.1 # Use a stable Grafana version
        ports:
            - "3000:3000"
        volumes:
            - ./grafana-data:/var/lib/grafana # Persistent storage for Grafana data
            - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml # Datasource provisioning
        environment:
            - GF_PATHS_DATA=/var/lib/grafana
            - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
            - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}
        networks:
            - sail
        depends_on:
            - loki
            - prometheus
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    grafana-data: 
        driver: local
